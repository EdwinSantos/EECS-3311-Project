Error messages and their associations (not definitive, tested from oracle):

Implemented/tested:

Implemented/testing:
New tracker: Functionality, Undo,E1 (new_tracker on tracker with *containers*),E2,E3,E4
New phase: Functionality, Undo,E1,E5,E6,E7,E8
New container: Functionality, undo, E5,E9,E10,E11,E12,E13,E14,E18
Remove container: Functionality, undo , E15
Remove Phase: Functionality, undo, E1 (if there are containers),E9
Move container: Functionality, undo, E9, E11, E12, E13, E14, E15, E16, E17

In progress:
- testing the 13 luca tests
- at1 : undo bug (likely to be the issue affecting most of the other tests)
1) undo all the way to new_tracker (get the error no more left to undo)
2) valid commands 
3) undo again all the way to new_tracker results in the "item" saved for the first valid command in (2) being the last error message obtained in (1)

This should only involve errors dealing with e19 from UNDO.
Ideas: - check if the error message is e19 and instead of setting the state message just set a boolean to capture that error message and leave state message alone. Check boolean in the output function and output the error if captured



- Testing and bug fixing
- test each valid case (with an undo and redo)
- test each error case
- assuming the "if attached" statements in the make functions for removeph and removecont work then the undo should be a simple call to new[object] using that saved object from the if attached


Notes:
- new_tracker doesnt wipe the board (existing phases stayed), but new_tracker does prevent undo to previous state
- on program start tracker should already exist with values 0,0
- new_tracker still has to wipe history
- when editing error_check make sure to check is_invalid matches with the results of error_check
- phases and containers...have to be sorted alphabetically.....
